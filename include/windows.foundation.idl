/*
 * Copyright 2015 Jacek Caban for CodeWeavers
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
 */

#ifdef __WIDL__
#pragma winrt ns_prefix
#endif

import "inspectable.idl";
import "asyncinfo.idl";
import "windowscontracts.idl";
/* import "eventtoken.idl"; */
/* import "ivectorchangedeventargs.idl"; */
import "windows.foundation.collections.idl";

namespace Windows {
    namespace Foundation {
        interface IStringable;
        interface IClosable;
        interface IAsyncAction;
        interface IUriEscapeStatics;
        interface IUriRuntimeClass;
        interface IUriRuntimeClassFactory;
        interface IUriRuntimeClassWithAbsoluteCanonicalUri;
        interface IWwwFormUrlDecoderEntry;
        interface IWwwFormUrlDecoderRuntimeClass;
        interface IWwwFormUrlDecoderRuntimeClassFactory;
        runtimeclass Uri;
        runtimeclass WwwFormUrlDecoder;
        runtimeclass WwwFormUrlDecoderEntry;

        declare {
            interface Windows.Foundation.Collections.IIterable<HSTRING>;
            interface Windows.Foundation.Collections.IIterable<IInspectable *>;
            interface Windows.Foundation.Collections.IIterable<Windows.Foundation.IWwwFormUrlDecoderEntry *>;
            interface Windows.Foundation.Collections.IIterator<HSTRING>;
            interface Windows.Foundation.Collections.IIterator<IInspectable *>;
            interface Windows.Foundation.Collections.IIterator<Windows.Foundation.IWwwFormUrlDecoderEntry *>;
            interface Windows.Foundation.Collections.IVectorView<HSTRING>;
            interface Windows.Foundation.Collections.IVectorView<IInspectable *>;
            interface Windows.Foundation.Collections.IVectorView<Windows.Foundation.IWwwFormUrlDecoderEntry *>;
            interface Windows.Foundation.Collections.IVector<HSTRING>;
            interface Windows.Foundation.Collections.IVector<IInspectable *>;
            interface Windows.Foundation.Collections.IMapView<HSTRING, Windows.Foundation.Collections.IVectorView<HSTRING>*>;
            interface Windows.Foundation.EventHandler<IInspectable *>;
            interface Windows.Foundation.AsyncOperationCompletedHandler<boolean>;
            interface Windows.Foundation.IAsyncOperation<boolean>;
            interface Windows.Foundation.IReference<INT32>;
            interface Windows.Foundation.TypedEventHandler<IInspectable *, IInspectable *>;
        }
    }
}

namespace Windows {
    namespace Foundation {
        typedef enum PropertyType PropertyType;
        typedef struct Point Point;
        typedef struct Size Size;
        typedef struct Rect Rect;
        typedef struct DateTime DateTime;
        typedef struct TimeSpan TimeSpan;

        [
            contract(Windows.Foundation.FoundationContract, 1.0),
            uuid(a4ed5c81-76c9-40bd-8be6-b1d90fb20ae7)
        ]
        delegate HRESULT AsyncActionCompletedHandler([in] Windows.Foundation.IAsyncAction *action, [in] AsyncStatus status);

        [contract(Windows.Foundation.FoundationContract, 1.0)]
        enum PropertyType {
            Empty       = 0,
            UInt8       = 1,
            Int16       = 2,
            UInt16      = 3,
            Int32       = 4,
            UInt32      = 5,
            Int64       = 6,
            UInt64      = 7,
            Single      = 8,
            Double      = 9,
            Char16      = 10,
            Boolean     = 11,
            String      = 12,
            Inspectable = 13,
            DateTime    = 14,
            TimeSpan    = 15,
            Guid        = 16,
            Point       = 17,
            Size        = 18,
            Rect        = 19,
            OtherType   = 20,
            UInt8Array       = 1025,
            Int16Array       = 1026,
            UInt16Array      = 1027,
            Int32Array       = 1028,
            UInt32Array      = 1029,
            Int64Array       = 1030,
            UInt64Array      = 1031,
            SingleArray      = 1032,
            DoubleArray      = 1033,
            Char16Array      = 1034,
            BooleanArray     = 1035,
            StringArray      = 1036,
            InspectableArray = 1037,
            DateTimeArray    = 1038,
            TimeSpanArray    = 1039,
            GuidArray        = 1040,
            PointArray       = 1041,
            SizeArray        = 1042,
            RectArray        = 1043,
            OtherTypeArray   = 1044
        };

        [contract(Windows.Foundation.FoundationContract, 1.0)]
        struct Point {
            FLOAT X;
            FLOAT Y;
        };

        [contract(Windows.Foundation.FoundationContract, 1.0)]
        struct Size {
            FLOAT Width;
            FLOAT Height;
        };

        [contract(Windows.Foundation.FoundationContract, 1.0)]
        struct Rect {
            FLOAT X;
            FLOAT Y;
            FLOAT Width;
            FLOAT Height;
        };

        [contract(Windows.Foundation.FoundationContract, 1.0)]
        struct DateTime {
            INT64 UniversalTime;
        };

        [contract(Windows.Foundation.FoundationContract, 1.0)]
        struct TimeSpan {
            INT64 Duration;
        };

        [
            contract(Windows.Foundation.FoundationContract, 1.0),
            uuid(96369f54-8eb6-48f0-abce-c1b211e627c3)
        ]
        interface IStringable : IInspectable
        {
            HRESULT ToString([out, retval] HSTRING *value);
        }

        [
            contract(Windows.Foundation.FoundationContract, 1.0),
            uuid(30d5a829-7fa4-4026-83bb-d75bae4ea99e)
        ]
        interface IClosable : IInspectable
        {
            HRESULT Close();
        }

        [
            contract(Windows.Foundation.FoundationContract, 1.0),
            uuid(5a648006-843a-4da9-865b-9d26e5dfad7b)
        ]
        interface IAsyncAction : IInspectable
            requires IAsyncInfo
        {
            [propput] HRESULT Completed([in] Windows.Foundation.AsyncActionCompletedHandler *handler);
            [propget] HRESULT Completed([out, retval] Windows.Foundation.AsyncActionCompletedHandler **handler);
            HRESULT GetResults();
        }

        [
            exclusiveto(Windows.Foundation.Uri),
            uuid(C1D432BA-C824-4452-A7FD-512BC3BBE9A1),
            contract(Windows.Foundation.UniversalApiContract, 1.0)
        ]
        interface IUriEscapeStatics : IInspectable
        {
            HRESULT UnescapeComponent([in] HSTRING toUnescape, [out] [retval] HSTRING* value);
            HRESULT EscapeComponent([in] HSTRING toEscape, [out] [retval] HSTRING* value);
        }

        [
            contract(Windows.Foundation.UniversalApiContract, 1.0),
            exclusiveto(Windows.Foundation.Uri),
            uuid(9E365E57-48B2-4160-956F-C7385120BBFC)
        ]
        interface IUriRuntimeClass : IInspectable
        {
            [propget] HRESULT AbsoluteUri([out] [retval] HSTRING* value);
            [propget] HRESULT DisplayUri([out] [retval] HSTRING* value);
            [propget] HRESULT Domain([out] [retval] HSTRING* value);
            [propget] HRESULT Extension([out] [retval] HSTRING* value);
            [propget] HRESULT Fragment([out] [retval] HSTRING* value);
            [propget] HRESULT Host([out] [retval] HSTRING* value);
            [propget] HRESULT Password([out] [retval] HSTRING* value);
            [propget] HRESULT Path([out] [retval] HSTRING* value);
            [propget] HRESULT Query([out] [retval] HSTRING* value);
            [propget] HRESULT QueryParsed([out] [retval] Windows.Foundation.WwwFormUrlDecoder** ppWwwFormUrlDecoder);
            [propget] HRESULT RawUri([out] [retval] HSTRING* value);
            [propget] HRESULT SchemeName([out] [retval] HSTRING* value);
            [propget] HRESULT UserName([out] [retval] HSTRING* value);
            [propget] HRESULT Port([out] [retval] INT32* value);
            [propget] HRESULT Suspicious([out] [retval] boolean* value);
            HRESULT Equals([in] Windows.Foundation.Uri* pUri, [out] [retval] boolean* value);
            HRESULT CombineUri([in] HSTRING relativeUri, [out] [retval] Windows.Foundation.Uri** instance);
        }

        [
            contract(Windows.Foundation.UniversalApiContract, 1.0),
            exclusiveto(Windows.Foundation.Uri),
            uuid(44A9796F-723E-4FDF-A218-033E75B0C084)
        ]
        interface IUriRuntimeClassFactory : IInspectable
        {
            HRESULT CreateUri([in] HSTRING uri, [out] [retval] Windows.Foundation.Uri** instance);
            HRESULT CreateWithRelativeUri([in] HSTRING baseUri, [in] HSTRING relativeUri, [out] [retval] Windows.Foundation.Uri** instance);
        }

        [
            contract(Windows.Foundation.UniversalApiContract, 1.0),
            exclusiveto(Windows.Foundation.Uri),
            uuid(758D9661-221C-480F-A339-50656673F46F)
        ]
        interface IUriRuntimeClassWithAbsoluteCanonicalUri : IInspectable
        {
            [propget] HRESULT AbsoluteCanonicalUri([out] [retval] HSTRING* value);
            [propget] HRESULT DisplayIri([out] [retval] HSTRING* value);
        }

        [
            contract(Windows.Foundation.UniversalApiContract, 1.0),
            uuid(125E7431-F678-4E8E-B670-20A9B06C512D)
        ]
        interface IWwwFormUrlDecoderEntry : IInspectable
        {
            [propget] HRESULT Name([out] [retval] HSTRING* value);
            [propget] HRESULT Value([out] [retval] HSTRING* value);
        }

        [
            contract(Windows.Foundation.UniversalApiContract, 1.0),
            exclusiveto(Windows.Foundation.WwwFormUrlDecoder),
            uuid(D45A0451-F225-4542-9296-0E1DF5D254DF)
        ]
        interface IWwwFormUrlDecoderRuntimeClass : IInspectable
        {
            HRESULT GetFirstValueByName([in] HSTRING name, [out] [retval] HSTRING* phstrValue);
        }

        [
            contract(Windows.Foundation.UniversalApiContract, 1.0),
            exclusiveto(Windows.Foundation.WwwFormUrlDecoder),
            uuid(5B8C6B3D-24AE-41B5-A1BF-F0C3D544845B)
        ]
        interface IWwwFormUrlDecoderRuntimeClassFactory : IInspectable
        {
            HRESULT CreateWwwFormUrlDecoder([in] HSTRING query, [out] [retval] Windows.Foundation.WwwFormUrlDecoder** instance);
        }

        [
            activatable(Windows.Foundation.IUriRuntimeClassFactory, Windows.Foundation.UniversalApiContract, 1.0),
            contract(Windows.Foundation.UniversalApiContract, 1.0),
            marshaling_behavior(agile),
            static(Windows.Foundation.IUriEscapeStatics, Windows.Foundation.UniversalApiContract, 1.0),
            threading(both)
        ]
        runtimeclass Uri
        {
            [default] interface Windows.Foundation.IUriRuntimeClass;
            interface Windows.Foundation.IUriRuntimeClassWithAbsoluteCanonicalUri;
            [contract(Windows.Foundation.UniversalApiContract, 1.0)] interface Windows.Foundation.IStringable;
        }

        [
            activatable(Windows.Foundation.IWwwFormUrlDecoderRuntimeClassFactory, Windows.Foundation.UniversalApiContract, 1.0),
            contract(Windows.Foundation.UniversalApiContract, 1.0),
            marshaling_behavior(agile),
            threading(both)
        ]
        runtimeclass WwwFormUrlDecoder
        {
            [default] interface Windows.Foundation.IWwwFormUrlDecoderRuntimeClass;
        }

        [
            contract(Windows.Foundation.UniversalApiContract, 1.0),
            marshaling_behavior(agile),
            threading(both)
        ]
        runtimeclass WwwFormUrlDecoderEntry
        {
            [default] interface Windows.Foundation.IWwwFormUrlDecoderEntry;
        }
    }
}
